openapi: 3.0.1
info:
  title: API Documentation
  description: OpenAPI documentation
  version: 1.0.0
servers:
  - url: "http://localhost:8080/bff"
    description: Generated server url
paths:
  /organizations:
    get:
      tags:
        - Organizations
      summary: "Retrieve the list of organizations"
      operationId: getOrganizations
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/OrganizationDTO'
        '401':
          description: Unauthorized - Missing or invalid token
        '403':
          description: Forbidden - Access denied
        '500':
          description: Internal Server Error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorDTO'
  /brokers/config:
    get:
      tags:
        - Brokers
      summary: "Retrieve application information for FE"
      operationId: getBrokerConfig
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConfigFE'
        '401':
          description: Unauthorized - Missing or invalid token
        '403':
          description: Forbidden - Access denied
        '500':
          description: Internal Server Error
  /core-health:
    get:
      tags:
        - Monitoring
      operationId: getHealthStatus
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceStatus'
        '503':
          description: Service is unavailable
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ServiceStatus'
  /taxonomy/getOrganizationTypes:
    get:
      tags:
        - Taxonomy
      summary: "Retrieve distinct organization types for FE"
      operationId: getOrganizationTypes
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxonomyOrganizationTypeDTO'
        '401':
          description: Unauthorized - Missing or invalid token
        '403':
          description: Forbidden - Access denied
        '500':
          description: Internal Server Error
  /taxonomy/getMacroArea:
    get:
      tags:
        - Taxonomy
      operationId: getMacroArea
      parameters:
        - name: organizationType
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                  $ref: '#/components/schemas/CollectionModelTaxonomyMacroAreaCodeDTO'
        '401':
          description: Unauthorized - Missing or invalid token
        '403':
          description: Forbidden - Access denied
        '500':
          description: Internal Server Error
  /taxonomy/getServiceType:
    get:
      tags:
        - Taxonomy
      operationId: getServiceType
      parameters:
        - name: organizationType
          in: query
          schema:
            type: string
        - name: macroAreaCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxonomyServiceTypeCodeDTO'
        '401':
          description: Unauthorized - Missing or invalid token
        '403':
          description: Forbidden - Access denied
        '500':
          description: Internal Server Error
  /taxonomy/getCollectionReason:
    get:
      tags:
        - Taxonomy
      operationId: getCollectionReason
      parameters:
        - name: organizationType
          in: query
          schema:
            type: string
        - name: macroAreaCode
          in: query
          schema:
            type: string
        - name: serviceTypeCode
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxonomyCollectionReasonDTO'
        '401':
          description: Unauthorized - Missing or invalid token
        '403':
          description: Forbidden - Access denied
        '500':
          description: Internal Server Error
  /taxonomy/getTaxonomyCode:
    get:
      tags:
        - Taxonomy
      operationId: getTaxonomyCode
      parameters:
        - name: organizationType
          in: query
          schema:
            type: string
        - name: macroAreaCode
          in: query
          schema:
            type: string
        - name: serviceTypeCode
          in: query
          schema:
            type: string
        - name: collectionReason
          in: query
          schema:
            type: string
      responses:
        '200':
          description: OK
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/CollectionModelTaxonomyCodeDTO'
security:
  - bearerAuth: [ ]
components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    CollectionModelTaxonomyCodeDTO:
      type: object
      properties:
        taxonomyCodeDTOes:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyCodeDTO'
    TaxonomyCodeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
        serviceTypeCode:
          type: string
        serviceType:
          type: string
        serviceTypeDescription:
          type: string
        collectionReason:
          type: string
        taxonomyCode:
          type: string
    CollectionModelTaxonomyCollectionReasonDTO:
      type: object
      properties:
        taxonomyCollectionReasonDTOes:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyCollectionReasonDTO'
    TaxonomyCollectionReasonDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
        serviceTypeCode:
          type: string
        serviceType:
          type: string
        serviceTypeDescription:
          type: string
        collectionReason:
          type: string
    CollectionModelTaxonomyServiceTypeCodeDTO:
      type: object
      properties:
        taxonomyServiceTypeCodeDTOes:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyServiceTypeCodeDTO'
    TaxonomyServiceTypeCodeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
        serviceTypeCode:
          type: string
        serviceType:
          type: string
        serviceTypeDescription:
          type: string
    CollectionModelTaxonomyMacroAreaCodeDTO:
      type: object
      properties:
        taxonomyMacroAreaCodeDTOes:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyMacroAreaCodeDTO'
    TaxonomyMacroAreaCodeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
        macroAreaCode:
          type: string
        macroAreaName:
          type: string
        macroAreaDescription:
          type: string
    CollectionModelTaxonomyOrganizationTypeDTO:
      type: object
      properties:
        taxonomyOrganizationTypeDTOes:
          type: array
          items:
            $ref: '#/components/schemas/TaxonomyOrganizationTypeDTO'
    TaxonomyOrganizationTypeDTO:
      type: object
      properties:
        organizationType:
          type: string
        organizationTypeDescription:
          type: string
    OrganizationDTO:
      type: object
      required:
        - organizationId
        - ipaCode
        - orgName
        - operatorRole
      properties:
        organizationId:
          type: integer
          format: int64
          description: Organization ID
        ipaCode:
          type: string
          description: IPA code of the organization
        orgName:
          type: string
          description: Organization name
        operatorRole:
          type: string
          enum:
            - ROLE_ADMIN
            - ROLE_OPER
          description: Operator role
        orgLogo:
          type: string
          format: base64
          description: Base64 encoded logo of the organization
    ConfigFE:
      type: object
      required:
        - headerAssistanceUrl
        - logoFooterImg
        - footerDescText
        - footerPrivacyInfoUrl
        - footerGDPRUrl
        - footerTermsCondUrl
        - footerAccessibilityUrl
        - brokerId
        - canManageUsers
      properties:
        headerAssistanceUrl:
          type: string
          description: URL for header assistance
        logoFooterImg:
          type: string
          description: URL for footer logo image
        footerDescText:
          type: string
          description: Description text for the footer
        footerPrivacyInfoUrl:
          type: string
          description: URL for privacy information in the footer
        footerGDPRUrl:
          type: string
          description: URL for GDPR information in the footer
        footerTermsCondUrl:
          type: string
          description: URL for terms and conditions in the footer
        footerAccessibilityUrl:
          type: string
          description: URL for accessibility information in the footer
        brokerId:
          type: string
          description: Broker ID
        canManageUsers:
          type: boolean
          description: Indicates if the user can manage other users
    ServiceStatus:
      type: object
      properties:
        serviceName:
          type: string
          description: Service Name
        statusMessage:
          type: string
          description: Service status
    ErrorDTO:
      type: object
      required:
        - title
        - description
      properties:
        title:
          type: string
          description: The title describing the error
        description:
          type: string
          description: Description of the error
